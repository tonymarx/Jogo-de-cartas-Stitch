<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cartas das Emoções do Stitch</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap');
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f0f2f5;
            color: #1a202c;
        }
        .card {
            background-color: white;
            padding: 1.5rem;
            border-radius: 1rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s ease-in-out;
        }
        .card:hover {
            transform: translateY(-5px);
        }
        .btn {
            padding: 0.75rem 1.5rem;
            border-radius: 9999px;
            font-weight: 600;
            transition: all 0.2s ease-in-out;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
        }
        .btn-blue {
            background-color: #3b82f6;
            color: white;
        }
        .btn-blue:hover {
            background-color: #2563eb;
        }
    </style>
</head>
<body class="p-6">
    <div class="max-w-6xl mx-auto text-center">
        <h1 class="text-4xl font-bold mb-4 text-indigo-600">Cartas das Emoções do Stitch</h1>
        <p class="text-lg text-gray-700 mb-8">Clique no botão para gerar uma imagem do Stitch expressando a emoção correspondente.</p>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">

            <!-- Card para Alegria -->
            <div class="card flex flex-col items-center">
                <h2 class="text-2xl font-bold mb-4 text-green-500">Alegria</h2>
                <div class="image-container w-full h-64 bg-gray-200 rounded-lg flex items-center justify-center overflow-hidden mb-4">
                    <img class="generated-image object-cover" src="" alt="Imagem gerada para Alegria">
                    <div class="loading-indicator text-gray-500 hidden">Gerando...</div>
                </div>
                <button class="btn btn-blue generate-btn w-full" data-emotion="Alegria">Gerar Imagem</button>
            </div>

            <!-- Card para Tristeza -->
            <div class="card flex flex-col items-center">
                <h2 class="text-2xl font-bold mb-4 text-blue-500">Tristeza</h2>
                <div class="image-container w-full h-64 bg-gray-200 rounded-lg flex items-center justify-center overflow-hidden mb-4">
                    <img class="generated-image object-cover" src="" alt="Imagem gerada para Tristeza">
                    <div class="loading-indicator text-gray-500 hidden">Gerando...</div>
                </div>
                <button class="btn btn-blue generate-btn w-full" data-emotion="Tristeza">Gerar Imagem</button>
            </div>
            
            <!-- Card para Raiva -->
            <div class="card flex flex-col items-center">
                <h2 class="text-2xl font-bold mb-4 text-red-500">Raiva</h2>
                <div class="image-container w-full h-64 bg-gray-200 rounded-lg flex items-center justify-center overflow-hidden mb-4">
                    <img class="generated-image object-cover" src="" alt="Imagem gerada para Raiva">
                    <div class="loading-indicator text-gray-500 hidden">Gerando...</div>
                </div>
                <button class="btn btn-blue generate-btn w-full" data-emotion="Raiva">Gerar Imagem</button>
            </div>

            <!-- Card para Medo -->
            <div class="card flex flex-col items-center">
                <h2 class="text-2xl font-bold mb-4 text-purple-500">Medo</h2>
                <div class="image-container w-full h-64 bg-gray-200 rounded-lg flex items-center justify-center overflow-hidden mb-4">
                    <img class="generated-image object-cover" src="" alt="Imagem gerada para Medo">
                    <div class="loading-indicator text-gray-500 hidden">Gerando...</div>
                </div>
                <button class="btn btn-blue generate-btn w-full" data-emotion="Medo">Gerar Imagem</button>
            </div>

            <!-- Card para Surpresa -->
            <div class="card flex flex-col items-center">
                <h2 class="text-2xl font-bold mb-4 text-yellow-500">Surpresa</h2>
                <div class="image-container w-full h-64 bg-gray-200 rounded-lg flex items-center justify-center overflow-hidden mb-4">
                    <img class="generated-image object-cover" src="" alt="Imagem gerada para Surpresa">
                    <div class="loading-indicator text-gray-500 hidden">Gerando...</div>
                </div>
                <button class="btn btn-blue generate-btn w-full" data-emotion="Surpresa">Gerar Imagem</button>
            </div>

            <!-- Card para Amor -->
            <div class="card flex flex-col items-center">
                <h2 class="text-2xl font-bold mb-4 text-pink-500">Amor</h2>
                <div class="image-container w-full h-64 bg-gray-200 rounded-lg flex items-center justify-center overflow-hidden mb-4">
                    <img class="generated-image object-cover" src="" alt="Imagem gerada para Amor">
                    <div class="loading-indicator text-gray-500 hidden">Gerando...</div>
                </div>
                <button class="btn btn-blue generate-btn w-full" data-emotion="Amor">Gerar Imagem</button>
            </div>

            <!-- Card para Confusão -->
            <div class="card flex flex-col items-center">
                <h2 class="text-2xl font-bold mb-4 text-gray-500">Confusão</h2>
                <div class="image-container w-full h-64 bg-gray-200 rounded-lg flex items-center justify-center overflow-hidden mb-4">
                    <img class="generated-image object-cover" src="" alt="Imagem gerada para Confusão">
                    <div class="loading-indicator text-gray-500 hidden">Gerando...</div>
                </div>
                <button class="btn btn-blue generate-btn w-full" data-emotion="Confusão">Gerar Imagem</button>
            </div>

            <!-- Card para Vergonha -->
            <div class="card flex flex-col items-center">
                <h2 class="text-2xl font-bold mb-4 text-orange-500">Vergonha</h2>
                <div class="image-container w-full h-64 bg-gray-200 rounded-lg flex items-center justify-center overflow-hidden mb-4">
                    <img class="generated-image object-cover" src="" alt="Imagem gerada para Vergonha">
                    <div class="loading-indicator text-gray-500 hidden">Gerando...</div>
                </div>
                <button class="btn btn-blue generate-btn w-full" data-emotion="Vergonha">Gerar Imagem</button>
            </div>
            
        </div>
    </div>

    <script>
        const emotionData = {
            "Alegria": "A happy, cheerful, and adorable Stitch from Lilo & Stitch, with a wide smile, jumping with joy and his arms open, in a cute cartoon style.",
            "Tristeza": "A sad and cute Stitch from Lilo & Stitch, with a droopy expression and a single tear, looking down in a cute cartoon style.",
            "Raiva": "An angry and frustrated Stitch from Lilo & Stitch, with furrowed brows, a pouting expression, and clenched fists, in a cute cartoon style.",
            "Medo": "A scared and worried Stitch from Lilo & Stitch, with wide eyes, cowering and shaking, in a cute cartoon style.",
            "Surpresa": "A surprised Stitch from Lilo & Stitch, with wide eyes and his mouth open in awe, as if he just saw something amazing, in a cute cartoon style.",
            "Amor": "A loving and affectionate Stitch from Lilo & Stitch, hugging Lilo and making a heart shape with his hands, in a cute cartoon style.",
            "Confusão": "A confused Stitch from Lilo & Stitch, tilting his head, with a thoughtful, puzzled expression, in a cute cartoon style.",
            "Vergonha": "A shy and embarrassed Stitch from Lilo & Stitch, blushing and hiding his face, in a cute cartoon style."
        };

        const buttons = document.querySelectorAll('.generate-btn');

        buttons.forEach(button => {
            button.addEventListener('click', () => {
                const emotion = button.getAttribute('data-emotion');
                const prompt = emotionData[emotion];
                const imageContainer = button.previousElementSibling.querySelector('.generated-image');
                const loadingIndicator = button.previousElementSibling.querySelector('.loading-indicator');
                
                generateImage(prompt, imageContainer, loadingIndicator);
            });
        });

        async function generateImage(prompt, imageElement, loadingElement) {
            loadingElement.style.display = 'block';
            imageElement.style.display = 'none';

            const apiKey = ""; // If you want to use models other than gemini-2.5-flash-image-preview or imagen-3.0-generate-002, provide an API key here. Otherwise, leave this as-is.
            const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/imagen-3.0-generate-002:predict?key=${apiKey}`;

            const payload = { 
                instances: { prompt: prompt }, 
                parameters: { "sampleCount": 1 } 
            };

            let retries = 0;
            const maxRetries = 3;
            let success = false;

            while (retries < maxRetries && !success) {
                try {
                    const response = await fetch(apiUrl, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(payload)
                    });

                    if (response.ok) {
                        const result = await response.json();
                        if (result.predictions && result.predictions.length > 0 && result.predictions[0].bytesBase64Encoded) {
                            const imageUrl = `data:image/png;base64,${result.predictions[0].bytesBase64Encoded}`;
                            imageElement.src = imageUrl;
                            imageElement.style.display = 'block';
                            success = true;
                        } else {
                            console.error("Erro na resposta da API: Nenhuma imagem gerada.");
                            imageElement.src = "https://placehold.co/300x200/cccccc/333333?text=Erro";
                            imageElement.style.display = 'block';
                            break; 
                        }
                    } else {
                        const errorData = await response.json();
                        console.error(`Erro da API: ${response.status} - ${errorData.error.message}`);
                        if (response.status === 429) {
                            const delay = Math.pow(2, retries) * 1000;
                            console.log(`Taxa de limite excedida. Tentando novamente em ${delay / 1000}s...`);
                            await new Promise(resolve => setTimeout(resolve, delay));
                        } else {
                            imageElement.src = "https://placehold.co/300x200/cccccc/333333?text=Erro";
                            imageElement.style.display = 'block';
                            break;
                        }
                    }
                } catch (error) {
                    console.error('Erro ao gerar imagem:', error);
                    imageElement.src = "https://placehold.co/300x200/cccccc/333333?text=Erro";
                    imageElement.style.display = 'block';
                    break;
                } finally {
                    loadingElement.style.display = 'none';
                }
                retries++;
            }

            if (!success) {
                console.error("Falha ao gerar a imagem após várias tentativas.");
                loadingElement.style.display = 'none';
                imageElement.src = "https://placehold.co/300x200/cccccc/333333?text=Falha";
                imageElement.style.display = 'block';
            }
        }
    </script>
</body>
</html>
